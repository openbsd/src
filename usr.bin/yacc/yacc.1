.\"	$OpenBSD: yacc.1,v 1.33 2020/05/23 22:43:43 espie Exp $
.\"
.\" Copyright (c) 1989, 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Robert Paul Corbett.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @(#)yacc.1	5.7 (Berkeley) 7/30/91
.\"
.Dd $Mdocdate: May 23 2020 $
.Dt YACC 1
.Os
.Sh NAME
.Nm yacc
.Nd an LALR(1) parser generator
.Sh SYNOPSIS
.Nm yacc
.Op Fl dlrtv
.Op Fl b Ar file_prefix
.Op Fl o Ar output_file
.Op Fl p Ar symbol_prefix
.Ar file
.Sh DESCRIPTION
.Nm
reads the grammar specification in
.Ar file
and generates an LR(1) parser for it.
The parsers consist of a set of LALR(1)
parsing tables and a driver routine
written in the C programming language.
.Nm
normally writes the parse tables and the driver routine to the file
.Pa y.tab.c .
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b Ar file_prefix
The
.Fl b
option changes the prefix prepended to the output file names to
the string denoted by
.Ar file_prefix .
The default prefix is the character
.Ar y .
.It Fl d
The
.Fl d
option causes the header file
.Pa y.tab.h
to be written.
.It Fl l
If the
.Fl l
option is not specified,
.Nm
will insert #line directives in the generated code.
The #line directives let the C compiler relate errors in the
generated code to the user's original code.
If the
.Fl l
option is specified,
.Nm
will not insert the #line directives.
#line directives specified by the user will be retained.
.It Fl o Ar output_file
The
.Fl o
option specifies an explicit name for the parser's output file name instead
of the default.
The names of the other output files are constructed from
.Pa output_file
as described under the
.Fl d
and
.Fl v
options.
.It Fl p Ar symbol_prefix
The
.Fl p
option changes the prefix prepended to yacc-generated symbols to
the string denoted by
.Ar symbol_prefix .
The default prefix is the string
.Ar yy .
.It Fl r
The
.Fl r
option causes
.Nm
to produce separate files for code and tables.
The code file is named
.Pa y.code.c ,
and the tables file is named
.Pa y.tab.c .
.It Fl t
The
.Fl t
option changes the preprocessor directives generated by
.Nm
so that debugging statements will be incorporated in the compiled code.
.It Fl v
The
.Fl v
option causes a human-readable description of the generated parser to
be written to the file
.Pa y.output .
.El
.Sh TABLES
The names of the tables generated by this version of
.Nm
are
.Dq yylhs ,
.Dq yylen ,
.Dq yydefred ,
.Dq yydgoto ,
.Dq yysindex ,
.Dq yyrindex ,
.Dq yygindex ,
.Dq yytable ,
and
.Dq yycheck .
Two additional tables,
.Dq yyname
and
.Dq yyrule ,
are created if
.Dv YYDEBUG
is defined and non-zero.
.Sh FILES
.Bl -tag -width /tmp/yacc.uXXXXXXXXXX -compact
.It Pa y.code.c
.It Pa y.tab.c
.It Pa y.tab.h
.It Pa y.output
.El
.Sh EXIT STATUS
.Ex -std yacc
.Sh DIAGNOSTICS
If there are rules that are never reduced, the number of such rules is
written to the standard error.
If there are any LALR(1)
conflicts, the number of conflicts is also written
to the standard error.
.Sh SEE ALSO
.Xr yyfix 1
.Rs
.%A F. DeRemer
.%A T. J. Pennello
.%D 1982
.%J TOPLAS
.%N Issue 4
.%P pp. 615\(en649
.%T Efficient Computation of LALR(1) Look-Ahead Sets
.%V Volume 4
.Re
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification,
though its presence is optional.
.Pp
The flags
.Op Fl or
are extensions to that specification.
.Sh HISTORY
.Nm
was originally developed at AT&T by
.An Stephen C. Johnson .
.Pp
Berkeley
.Nm
was originally developed using PCC on a VAX with the
intent of being as compatible as possible with
.At
.Nm .
Much is owed to the unflagging efforts of Keith Bostic.
His badgering kept me working on
.Nm
long after I was ready to quit.
.Pp
Berkeley
.Nm
is based on the excellent algorithm for computing
LALR(1) lookaheads developed by
.An Tom Pennello
and
.An Frank DeRemer .
The algorithm is described in their almost impenetrable article in
TOPLAS (see above).
.Pp
Finally, much credit must go to those who pointed out deficiencies
of earlier releases.
Among the most prolific contributors were
Benson I. Margulies,
Dave Gentzel,
Antoine Verheijen,
Peter S. Housel,
Dale Smith,
Ozan Yigit,
John Campbell,
Bill Sommerfeld,
Paul Hilfinger,
Gary Bridgewater,
Dave Bakken,
Dan Lanciani,
Richard Sargent,
and
Parag Patel.
.Sh AUTHORS
The
.Nm
utility was written by
.An Robert Corbett .
