.\"	$OpenBSD: locate.1,v 1.31 2019/01/17 06:15:44 tedu Exp $
.\"
.\" Copyright (c) 1995 Wolfram Schneider <wosch@FreeBSD.org>. Berlin.
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)locate.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: January 17 2019 $
.Dt LOCATE 1
.Os
.Sh NAME
.Nm locate
.Nd find filenames quickly
.Sh SYNOPSIS
.Nm locate
.Op Fl bciS
.Op Fl d Ar database
.Op Fl l Ar limit
.Ar pattern ...
.Sh DESCRIPTION
The
.Nm
utility searches a database for all pathnames which match the specified
.Ar pattern .
By default, the database is recomputed
.Xr weekly 8
and contains the pathnames
of all files which are publicly accessible.
.Pp
Shell globbing and quoting characters
.Pf ( Ql * ,
.Ql \&? ,
.Ql \e ,
.Ql \&[ ,
and
.Ql \&] )
may be used in
.Ar pattern ,
although they will have to be escaped from the shell.
Preceding any character with a backslash
.Pq Ql \e
eliminates any special meaning which it may have.
The matching differs in that no characters must be matched explicitly,
including slashes
.Pq Ql / .
.Pp
As a special case, a pattern containing no globbing characters
.Pq Dq foo
is matched as though it were
.Dq *foo* .
.Pp
The database stores all bytes occurring in filenames except newline
.Pq Ql \en
and
NUL
.Pq Ql \e0 .
Internally, it uses a dedicated, compressed, undocumented format.
For example, bytes less than 32 or greater than 127 are encoded as
two bytes, whereas the 128 most frequent two-byte sequences are
encoded as single bytes.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b
For each entry in the database, perform the search on the last
component of path.
.It Fl c
Suppress normal output; instead print a count of matching filenames.
.It Fl d Ar database
Search in
.Ar database
instead of the default filename database.
Multiple
.Fl d
options are allowed.
Each additional
.Fl d
option adds the specified database to the list
of databases to be searched.
.Pp
.Ar database
may be a colon-separated list of databases.
An empty database name is a reference to the default database.
.Pp
.Dl $ locate -d $HOME/lib/mydb: foo
.Pp
will first search for the string
.Dq foo
in
.Pa $HOME/lib/mydb
and then in
.Pa /var/db/locate.database .
.Pp
.Dl $ locate -d $HOME/lib/mydb::/cdrom/locate.database foo
.Pp
will first search for the string
.Dq foo
in
.Pa $HOME/lib/mydb
and then in
.Pa /var/db/locate.database
and then in
.Pa /cdrom/locate.database .
.Pp
.Dl $ locate -d db1 -d db2 -d db3 pattern
.Pp
is the same as
.Pp
.Dl $ locate -d db1:db2:db3 pattern
.Pp
or
.Pp
.Dl $ locate -d db1:db2 -d db3 pattern
.It Fl i
Ignore case distinctions in both the pattern and the database.
Since filenames are not character strings but merely opaque byte strings,
.Nm
ignores the
.Xr locale 1
set by the user, always operates under the
.Qq C
locale, and the case rules employed are those of the ASCII character set.
.It Fl l Ar limit
Limit output to a specific number of files and exit.
.It Fl S
Print some statistics about the database and exit.
.El
.Sh ENVIRONMENT
.Bl -tag -width LOCATE_PATH -compact
.It Ev LOCATE_PATH
Path to the locate database if set and not empty; ignored if the
.Fl d
option was specified.
.El
.Sh FILES
.Bl -tag -width /usr/libexec/locate.updatedb -compact
.It Pa /etc/weekly
script that starts the database rebuild
.It Pa /usr/libexec/locate.updatedb
script to update the locate database
.It Pa /var/db/locate.database
locate database
.El
.Sh SEE ALSO
.Xr find 1 ,
.Xr fnmatch 3 ,
.Xr locate.updatedb 8 ,
.Xr weekly 8
.Rs
.%A Woods, James A.
.%D 1983
.%T "Finding Files Fast"
.%J ";login"
.%V 8:1
.%P pp. 8-10
.Re
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.4 .
.Sh BUGS
.Nm
may fail to list some files that are present, or may
list files that have been removed from the system.
This is because
.Nm
only reports files that are present in a periodically reconstructed
database (typically rebuilt once a week by the
.Xr weekly 8
script).
Use
.Xr find 1
to locate files that are of a more transitory nature.
.Pp
The
.Nm
database is built by user
.Dq nobody
using
.Xr find 1 .
This will
skip directories which are not readable by user
.Dq nobody ,
group
.Dq nobody ,
or
the world.
E.g., if your home directory is not world-readable, your files will
.Em not
appear in the database.
.Pp
The
.Nm
database is not byte order independent.
It is not possible
to share the databases between machines with different byte order.
The current
.Nm
implementation understands databases in host byte order or
network byte order.
So a little-endian machine can't understand
a locate database which was built on a big-endian machine.
