.\"	$OpenBSD: gettimeofday.2,v 1.30 2019/01/18 05:03:42 cheloha Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)gettimeofday.2	8.2 (Berkeley) 5/26/95
.\"
.Dd $Mdocdate: January 18 2019 $
.Dt GETTIMEOFDAY 2
.Os
.Sh NAME
.Nm gettimeofday ,
.Nm settimeofday
.Nd get/set date and time
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fn gettimeofday "struct timeval *tp" "struct timezone *tzp"
.Ft int
.Fn settimeofday "const struct timeval *tp" "const struct timezone *tzp"
.Sh DESCRIPTION
.Bf -symbolic
Note: timezone is no longer used; this information is kept outside
the kernel.
.Ef
.Pp
The system's notion of the current Greenwich time and the current time
zone is obtained with the
.Fn gettimeofday
call, and set with the
.Fn settimeofday
call.
The time is expressed in seconds and microseconds
since midnight (0 hour), January 1, 1970.
The resolution of the system clock is hardware dependent, and the time
may be updated continuously or in
.Dq ticks .
If
.Fa tp
or
.Fa tzp
is
.Dv NULL ,
the associated time
information will not be returned or set.
.Pp
The structures pointed to by
.Fa tp
and
.Fa tzp
are defined in
.In sys/time.h
as:
.Bd -literal
struct timeval {
	time_t		tv_sec;		/* seconds since Jan. 1, 1970 */
	suseconds_t	tv_usec;	/* and microseconds */
};

struct timezone {
	int	tz_minuteswest; /* of Greenwich */
	int	tz_dsttime;	/* type of dst correction to apply */
};
.Ed
.Pp
The
.Fa timezone
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
.Pp
Only the superuser may set the time of day or time zone.
If the system securelevel is greater than 1 (see
.Xr init 8 ) ,
the time may only be advanced.
This limitation is imposed to prevent a malicious superuser
from setting arbitrary time stamps on files.
The system time can still be adjusted backwards using the
.Xr adjtime 2
system call even when the system is secure.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn gettimeofday
and
.Fn settimeofday
will succeed unless:
.Bl -tag -width Er
.It Bq Er EFAULT
An argument address referenced invalid memory.
.El
.Pp
In addition,
.Fn settimeofday
may return the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa tp
specified a microsecond value less than zero or greater than or equal to
1 million.
.It Bq Er EPERM
A user other than the superuser attempted to set the time.
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr clock_gettime 2 ,
.Xr getitimer 2 ,
.Xr ctime 3 ,
.Xr time 3
.Sh STANDARDS
The
.Fn gettimeofday
function conforms to
.St -p1003.1-2008 .
.Sh HISTORY
As predecessors of these functions, former system calls
.Fn time
and
.Fn stime
first appeared in
.At v1 ,
and
.Fn ftime
first appeared in
.At v7 .
The
.Fn gettimeofday
and
.Fn settimeofday
system calls first appeared in
.Bx 4.1c .
.Sh CAVEATS
Setting the time with
.Fn settimeofday
is dangerous; if possible use
.Xr adjtime 2
instead.
Many daemon programming techniques utilize time-delta techniques
using the results from
.Fn gettimeofday
instead of from
.Xr clock_gettime 2
on the
.Dv CLOCK_MONOTONIC
clock.
Time jumps can cause these programs to malfunction in unexpected ways.
If the time must be set, consider rebooting the machine for safety.
