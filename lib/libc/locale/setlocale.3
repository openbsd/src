.\"	$OpenBSD: setlocale.3,v 1.20 2018/03/22 00:03:24 schwarze Exp $
.\"	$NetBSD: setlocale.3,v 1.3 1997/07/14 23:19:47 kleink Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Donn Seeley at BSDI.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)setlocale.3	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: March 22 2018 $
.Dt SETLOCALE 3
.Os
.Sh NAME
.Nm setlocale ,
.Nm localeconv
.Nd select character encoding
.Sh SYNOPSIS
.In locale.h
.Ft char *
.Fn setlocale "int category" "const char *locale"
.Ft struct lconv *
.Fn localeconv "void"
.Sh DESCRIPTION
The
.Fn setlocale
function sets and retrieves the active
.Fa locale
for the current process.
The locale modifies the behaviour of some functions in the C library
with respect to the character encoding, and on other operating systems
also with respect to some language and cultural conventions.
For more information about locales in general, see the
.Xr locale 1
manual page.
.Pp
On
.Ox ,
the only useful value for the
.Fa category
is
.Dv LC_CTYPE .
It sets the locale used for character encoding, character classification,
and case conversion.
For compatibility with natural language support in
.Xr packages 7 ,
all other categories \(em
.Dv LC_COLLATE ,
.Dv LC_MESSAGES ,
.Dv LC_MONETARY ,
.Dv LC_NUMERIC ,
and
.Dv LC_TIME
\(em can be set and retrieved, too, but their values are ignored by the
.Ox
C library.
A category of
.Dv LC_ALL
sets the entire locale generically.
.Pp
The syntax and semantics of the
.Fa locale
argument are not standardized and vary among operating systems.
On
.Ox ,
if the
.Fa locale
string ends with
.Qq ".UTF-8" ,
the UTF-8 locale is selected; otherwise, the
.Qq C
locale is selected, which uses the ASCII character set.
If the
.Fa locale
contains a dot but does not end with
.Qq ".UTF-8" ,
.Fn setlocale
fails.
.Pp
If
.Fa locale
is an empty string
.Pq Qq ,
the value of the environment variable
.Ev LC_ALL ,
with a fallback to the variable corresponding to
.Fa category ,
and with a further fallback to
.Ev LANG ,
is used instead, as documented in the
.Xr locale 1
manual page.
.Pp
If
.Fa locale
is
.Dv NULL ,
the locale remains unchanged.
This can be used to determine the currently active locale.
.Pp
By default, C programs start in the
.Qq C
locale.
The only function in the library that sets the locale is
.Fn setlocale ;
the locale is never changed as a side effect of some other routine.
.Pp
The
.Fn localeconv
function returns a pointer to a static structure
which provides parameters for formatting numbers.
On
.Ox ,
nothing in the returned structure ever changes.
.Pp
It provides the following fields of type
.Vt char * :
.Bl -tag -width mon_decimal_point
.It Fa decimal_point
The decimal point character, except for currency values.
.It Fa thousands_sep
The separator between groups of digits
before the decimal point, except for currency values.
.It Fa grouping
The sizes of the groups of digits, except for currency values.
This is a pointer to a vector of integers, each of size
.Li char ,
representing group size from low order digit groups
to high order (right to left).
The list may be terminated with 0 or
.Dv CHAR_MAX .
If the list is terminated with 0,
the last group size before the 0 is repeated to account for all the digits.
If the list is terminated with
.Dv CHAR_MAX ,
no more grouping is performed.
.It Fa int_curr_symbol
The standardized international currency symbol.
.It Fa currency_symbol
The local currency symbol.
.It Fa mon_decimal_point
The decimal point character for currency values.
.It Fa mon_thousands_sep
The separator for digit groups in currency values.
.It Fa mon_grouping
Like
.Fa grouping
but for currency values.
.It Fa positive_sign
The character used to denote non-negative currency values,
usually the empty string.
.It Fa negative_sign
The character used to denote negative currency values,
usually a minus sign.
.El
.Pp
It also provides the following fields of type
.Vt char :
.Bl -tag -width mon_decimal_point
.It Fa int_frac_digits
The number of digits after the decimal point
in an international-style currency value.
.It Fa frac_digits
The number of digits after the decimal point
in the local style for currency values.
.It Fa p_cs_precedes
1 if the currency symbol precedes the currency value
for non-negative values, 0 if it follows.
.It Fa p_sep_by_space
1 if a space is inserted between the currency symbol
and the currency value for non-negative values, 0 otherwise.
.It Fa n_cs_precedes
Like
.Fa p_cs_precedes
but for negative values.
.It Fa n_sep_by_space
Like
.Fa p_sep_by_space
but for negative values.
.It Fa p_sign_posn
The location of the
.Fa positive_sign
with respect to a non-negative quantity and the
.Fa currency_symbol ,
coded as follows:
.Pp
.Bl -tag -width 3n -compact
.It Li 0
Parentheses around the entire string.
.It Li 1
Before the string.
.It Li 2
After the string.
.It Li 3
Just before
.Fa currency_symbol .
.It Li 4
Just after
.Fa currency_symbol .
.El
.It Fa n_sign_posn
Like
.Fa p_sign_posn
but for negative currency values.
.It Fa int_p_cs_precedes
Like
.Fa p_cs_precedes
but for the international symbol.
.It Fa int_n_cs_precedes
Like
.Fa n_cs_precedes
but for the international symbol.
.It Fa int_p_sep_by_space
Like
.Fa p_sep_by_space
but for the international symbol.
.It Fa int_n_sep_by_space
Like
.Fa n_sep_by_space
but for the international symbol.
.It Fa int_p_sign_posn
Like
.Fa p_sign_posn
but for the international symbol.
.It Fa int_n_sign_posn
Like
.Fa n_sign_posn
but for the international symbol.
.El
.Pp
Unless mentioned above,
an empty string as a value for a field
indicates a zero length result or
a value that is not in the current locale.
A
.Dv CHAR_MAX
result similarly denotes an unavailable value.
.Sh RETURN VALUES
In case of success,
.Fn setlocale
returns a pointer to a static string describing the locale
that is in force after the call.
Subsequent calls to
.Fn setlocale
may change the content of the string.
The format of the string is not standardized and varies among
operating systems.
.Pp
On
.Ox ,
if
.Fn setlocale
was never called with a
.Pf non- Dv NULL
.Fa locale
argument, the string
.Qq C
is returned.
Otherwise, if the
.Fa category
was not
.Dv LC_ALL
or if the locale is the same for all categories, a copy of the
.Fa locale
argument is returned.
Otherwise, the locales for the six categories
.Dv LC_COLLATE ,
.Dv LC_CTYPE ,
.Dv LC_MESSAGES ,
.Dv LC_MONETARY ,
.Dv LC_NUMERIC ,
.Dv LC_TIME
are concatenated in that order, with slash
.Pq Ql /
characters in between.
.Pp
In case of failure,
.Fn setlocale
returns
.Dv NULL .
On
.Ox ,
that can only happen if the
.Fa category
is invalid, if a character encoding other than UTF-8 is requested,
if the requested
.Fa locale
name is of excessive length, or if memory allocation fails.
.Sh EXAMPLES
Calling
.Pp
.Dl setlocale(LC_CTYPE, \(dqen_US.UTF-8\(dq);
.Pp
at the beginning of a program selects the UTF-8 locale and returns
.Qq en_US.UTF-8 .
Calling
.Pp
.Dl setlocale(LC_ALL, NULL);
.Pp
right afterwards leaves the locale unchanged and returns
.Qq C/en_US.UTF-8/C/C/C/C .
.Sh STANDARDS
The
.Fn setlocale
and
.Fn localeconv
functions conform to
.St -ansiC .
.Sh HISTORY
The
.Fn setlocale
and
.Fn localeconv
functions first appeared in
.Bx 4.4 .
