.\"	$OpenBSD: ld.so.1,v 1.22 2016/07/04 21:15:06 guenther Exp $
.\"	$NetBSD: rtld.1,v 1.2 1995/10/08 23:43:28 pk Exp $
.\"
.\" Copyright (c) 1995 Paul Kranenburg
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Paul Kranenburg.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 4 2016 $
.Dt LD.SO 1
.Os
.Sh NAME
.Nm ld.so
.Nd run-time link-editor
.Sh DESCRIPTION
.Nm
is a self-contained, position independent program image providing run-time
support for loading and link-editing shared objects into a process's
address space.
It uses the data structures
.Po
see
.Xr elf 5
.Pc
contained within dynamically linked programs to determine which shared
libraries are needed and loads them at a convenient virtual address
using the
.Xr mmap 2
system call.
.Pp
After all shared libraries have been successfully loaded,
.Nm
proceeds to resolve external references from both the main program and
all objects loaded.
A mechanism is provided for initialization routines to be called,
on a per-object basis, giving a shared object an opportunity
to perform any extra set-up, before execution of the program proper begins.
.\"
.\" <talk about CTORS/DTORS>
.\"
.Pp
.Nm
is itself a shared object that is initially loaded by the kernel.
.\"
.\" <How it is run>
.\"
.Pp
To quickly locate the required shared objects in the filesystem,
.Nm
may use a
.Dq hints
file, prepared by the
.Xr ldconfig 8
utility, in which the full path specification of the shared objects can be
looked up by hashing on the 3-tuple
.Aq library-name , major-version-number , minor-version-number .
.Pp
.Nm
recognises a number of environment variables that can be used to modify
its behaviour as follows:
.Pp
.Bl -tag -width Ds -compact
.It Ev LD_LIBRARY_PATH
A colon separated list of directories, prepending the default search path
for shared libraries.
This variable is ignored for set-user-ID and set-group-ID executables.
.Pp
.It Ev LD_PRELOAD
A colon separate list of library names to load before any of the regular
libraries are loaded.
This variable is ignored for set-user-ID and set-group-ID executables.
.Pp
.It Ev LD_BIND_NOW
Specifies that the dynamic linker should process all relocations before
transferring control to the program.
Normally, the procedure linkage table entries are handled lazily,
avoiding symbol lookup and relocation for unused functions.
This variable is ignored for set-user-ID and set-group-ID executables.
.Pp
.It Ev LD_TRACE_LOADED_OBJECTS
When set, causes
.Nm
to exit after loading the shared objects and printing a summary which includes
the absolute pathnames of all objects, to standard output.
.Pp
.It Ev LD_TRACE_LOADED_OBJECTS_FMT1
.It Ev LD_TRACE_LOADED_OBJECTS_FMT2
When set, these variables are interpreted as format strings a la
.Xr printf 3
to customize the trace output and are used by
.Xr ldd 1 Ns 's
.Fl f
option and allows
.Xr ldd 1
to be operated as a filter more conveniently.
.Ev LD_TRACE_LOADED_OBJECTS_FMT1
is used for tracing shared libraries;
.Ev LD_TRACE_LOADED_OBJECTS_FMT2
for dynamically loaded objects, the dynamic linker,
and the main executable.
The following conversions can be used:
.Bl -tag -width "xxxx"
.It %a
The main program's name
.Pq also known as Dq __progname .
.It \&%A
The value of the environment variable
.Ev LD_TRACE_LOADED_OBJECTS_PROGNAME .
.It %e
The end address of the object.
.It %g
The object's group reference count.
.It %m
The object's major version number.
.It %n
The object's minor version number.
.It \&%O
The object's open count.
.It %o
The object name.
.It %p
The full pathname as determined by
.Nm ld.so Ns 's
library search rules.
.It %r
The object's reference count.
.It %x
The object's load address.
.El
.Pp
Additionally,
.Sy \en
and
.Sy \et
are recognised and have their usual meaning.
.Pp
.It Ev LD_DEBUG
When set, be verbose about what
.Nm
does.
.El
.Sh FILES
.Bl -tag -width /var/run/ld.so.hintsXXX -compact
.It Pa /var/run/ld.so.hints
library location hints built by
.Xr ldconfig 8
.El
.Sh SEE ALSO
.Xr ld 1 ,
.Xr elf 5 ,
.Xr ldconfig 8
.Sh HISTORY
The shared library model employed first appeared in SunOS 4.0.
