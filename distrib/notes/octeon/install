dnl	$OpenBSD: install,v 1.16 2017/11/30 15:25:37 visa Exp $
OpenBSDInstallPrelude

OpenBSDInstallPart2

OpenBSDInstallPart3(,"octcf0 for internal CompactFlash storage.")
dnl sd0 for USB storage, or wd0 for internal hard disk storage attached to the SATA port

OpenBSDInstallPart4

OpenBSDInstallMBRPart1

dnl OpenBSDInstallMBRPart2
	The fdisk(8) utility will be invoked to let you edit your MBR
	partitioning.  The current MBR partitions defined will be
	displayed and you will be allowed to modify them, and add new
	partitions.

	The setup will need two partitions, one 'OpenBSD' for the
	OpenBSD/MACHINE installation, and one 'MSDOS' for the
	U-Boot scripts/bootloader.

	If you use the whole disk option, the install script
	will create a small 'MSDOS' partition and use the rest of
	the disk for the OpenBSD installation.

	After your OpenBSD MBR partition has been setup, the real
	partition setup can follow.

OpenBSDInstallPart5({:-
	U-Boot partitions defined on the disk will usually show up as
	partition 'i', 'j' and so on.-:})

dnl OpenBSDInstallPart6({:-CD-ROM, -:})
OpenBSDInstallPart6

OpenBSDURLInstall

dnl OpenBSDCDROMInstall

OpenBSDNFSInstall

OpenBSDDISKInstall({:-"octcfN" or -:},,{:-, Linux (ext2) or MS-DOS-:})

OpenBSDCommonInstall

OpenBSDInstallWrapup

OpenBSD/MACHINE currently lacks a real bootloader. It is possible however to
boot into OpenBSD upon powering on the machine.

From the U-Boot commandline, make a copy of the current ${bootcmd} so you can
restore it later if needed:

	# setenv old_bootcmd "${bootcmd}"

${bootcmd} is run by U-Boot when ${autoload} is enabled. Now create a new
${bootcmd} which will load an ELF file called 'bsd' from the first active FAT
partition on the first CF card or USB device. The FAT partition has been created
by the installer.

	# setenv bootcmd 'fatload ide 0:1 ${loadaddr} bsd;bootoctlinux rootdev=/dev/octcf0'
	# setenv bootdelay 5
	# saveenv
	Saving Environment to Flash...
	Un-Protected 1 sectors
	Erasing Flash...
	. done
	Erased 1 sectors
	Writing to Flash... .done
	Protected 1 sectors
	#

If you have installed onto USB use the following bootcmd instead:

  fatload usb 0 ${loadaddr} bsd; bootoctlinux rootdev=sd0

On multi-core systems, the numcores parameter enables the secondary CPUs.
Use the total number of cores on your system as the value of the parameter.

  fatload usb 0 ${loadaddr} bsd; bootoctlinux rootdev=sd0 numcores=2

On the EdgeRouter Lite, bootcmd may also reset the USB controller for
more reliable USB device detection:

  usb reset; fatload usb 0 ${loadaddr} bsd; bootoctlinux rootdev=sd0 numcores=2

OpenBSDCongratulations

OpenBSDUnattendedInstallation
