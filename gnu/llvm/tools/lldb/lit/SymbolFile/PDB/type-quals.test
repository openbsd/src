REQUIRES: windows
RUN: clang-cl -m32 /Z7 /c /GS- %S/Inputs/TypeQualsTest.cpp /o %T/TypeQualsTest.cpp.obj
RUN: link %T/TypeQualsTest.cpp.obj /DEBUG /nodefaultlib /ENTRY:main /OUT:%T/TypeQualsTest.cpp.exe
RUN: lldb-test symbols %T/TypeQualsTest.cpp.exe | FileCheck %s

CHECK: Module [[MOD:.*]]
CHECK-DAG: {{^[0-9A-F]+}}: SymbolVendor ([[MOD]])
CHECK:      Type{{.*}} , name = "const int", size = 4, compiler_type = {{.*}} const int
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} const int *
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} const int **const
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} const int *const
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} const int *const *
CHECK:      Type{{.*}} , name = "Func1", {{.*}}, compiler_type = {{.*}} void (const int *, const int *, const int **const, const int *const *)

CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} volatile int *
CHECK:      Type{{.*}} , name = "Func2", {{.*}}, compiler_type = {{.*}} void (volatile int *, volatile int *)

CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int *
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int *&
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int &
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} const int &
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int &&
CHECK:      Type{{.*}} , name = "Func3", {{.*}}, compiler_type = {{.*}} void (int *&, int &, const int &, int &&)

// FIXME: __unaligned is not supported.
CHECK:      Type{{.*}} , name = "Func4", {{.*}}, compiler_type = {{.*}} void (int *, int *)

CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int *__restrict
CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} int &__restrict
CHECK:      Type{{.*}} , name = "Func5", {{.*}}, compiler_type = {{.*}} void (int, int *__restrict, int &__restrict)

CHECK:      Type{{.*}} , name = "Func6", {{.*}}, compiler_type = {{.*}} void (const volatile int *__restrict)

CHECK:      Type{{.*}} , size = 400, compiler_type = {{.*}} volatile int *[100]
CHECK:      Type{{.*}} , size = 4000, compiler_type = {{.*}} volatile int *[10][100]

CHECK:      Type{{.*}} , size = 4, compiler_type = {{.*}} long *__restrict

CHECK-DAG: {{^[0-9A-F]+}}:   CompileUnit{{[{]0x[0-9a-f]+[}]}}, language = "c++", file = '{{.*}}\TypeQualsTest.cpp'
