  gv.c AOK

     Can't locate package %s for @%s::ISA
	@ISA = qw(Fred); joe()

     $# is no longer supported
     $* is no longer supported

	$a = ${"#"} ;
 	$a = ${"*"} ;

     Name "main::a" used only once: possible typo

  Mandatory Warnings ALL TODO
  ------------------

    Had to create %SVf unexpectedly		[gv_fetchpv]
    Attempt to free unreferenced glob pointers	[gp_free]
    
__END__
# gv.c
use warnings 'syntax' ;
@ISA = qw(Fred); joe()
EXPECT
Can't locate package Fred for @main::ISA at - line 3.
Undefined subroutine &main::joe called at - line 3.
########
# gv.c
no warnings 'syntax' ;
@ISA = qw(Fred); joe()
EXPECT
Undefined subroutine &main::joe called at - line 3.
########
# gv.c
$a = ${"#"};
$a = ${"*"};
no warnings 'deprecated' ;
$a = ${"#"};
$a = ${"*"};
EXPECT
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 2.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 3.
########
# gv.c
$a = ${#};
$a = ${*};
no warnings 'deprecated' ;
$a = ${#};
$a = ${*};
EXPECT
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 2.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 3.
########
# gv.c
$a = $#;
$a = $*;
$# = $a;
$* = $a;
$a = \$#;
$a = \$*;
no warnings 'deprecated' ;
$a = $#;
$a = $*;
$# = $a;
$* = $a;
$a = \$#;
$a = \$*;
EXPECT
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 2.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 3.
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 4.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 5.
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 6.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 7.
########
# gv.c
@a = @#;
@a = @*;
$a = $#;
$a = $*;
EXPECT
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 4.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 5.
########
# gv.c
$a = $#;
$a = $*;
@a = @#;
@a = @*;
EXPECT
$# is no longer supported. Its use will be fatal in Perl 5.30 at - line 2.
$* is no longer supported. Its use will be fatal in Perl 5.30 at - line 3.
########
# gv.c
$a = ${^ENCODING};
$a = ${^E_NCODING};
${^E_NCODING} = 1; # We pretend this variable never existed.
EXPECT
########
# gv.c
use warnings 'syntax' ;
use utf8;
use open qw( :utf8 :std );
package Ｙ;
@ISA = qw(Fred); joe()
EXPECT
Can't locate package Fred for @Ｙ::ISA at - line 6.
Undefined subroutine &Ｙ::joe called at - line 6.
########
# gv.c
use warnings;
$x = 1;
if ($x) {
    print $y;
}
$a++; # These two should
$b++; # be exempt.
$Foo::a++;
$Foo::b++;
EXPECT
Name "main::y" used only once: possible typo at - line 5.
Use of uninitialized value $y in print at - line 5.
########
# gv.c
use warnings;
$x = 1;
if ($x) {
    $x++;
    print $y;
}
EXPECT
Name "main::y" used only once: possible typo at - line 6.
Use of uninitialized value $y in print at - line 6.
########
# gv.c
use warnings;
$x = 0;
if ($x) {
    print "1\n";
} elsif (!$x) {
    print $y;
} else {
    print "0\n";
}
EXPECT
Name "main::y" used only once: possible typo at - line 7.
Use of uninitialized value $y in print at - line 7.
########
# gv.c
use warnings;
$x = 0;
if ($x) {
    print "1\n";
} elsif (!$x) {
    $x++;
    print $y;
} else {
    print "0\n";
}
EXPECT
Name "main::y" used only once: possible typo at - line 8.
Use of uninitialized value $y in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 1;
if ($ㄒ) {
    print $ʎ;
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 7.
Use of uninitialized value $ʎ in print at - line 7.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 1;
if ($ㄒ) {
    $ㄒ++;
    print $ʎ;
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 8.
Use of uninitialized value $ʎ in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 9.
Use of uninitialized value $ʎ in print at - line 9.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    $ㄒ++;
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 10.
Use of uninitialized value $ʎ in print at - line 10.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 1;
if ($ㄒ) {
    print $ʎ;
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 8.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 1;
if ($ㄒ) {
    $ㄒ++;
    print $ʎ;
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 9.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 9.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 10.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 10.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    $ㄒ++;
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 11.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 11.
